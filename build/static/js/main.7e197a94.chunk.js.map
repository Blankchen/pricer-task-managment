{"version":3,"sources":["api.js","custom-hooks.js","components/Layout.js","components/AddTask.js","components/TaskListItem.js","components/TaskList.js","index.js"],"names":["baseUrl","process","taskAPI","fetch","concat","then","res","json","name","urlencoded","URLSearchParams","append","method","body","task","checked","id","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Layout","React","memo","_ref","children","createElement","Paper","elevation","style","padding","margin","backgroundColor","AppBar","color","position","height","Toolbar","Typography","AddTask","inputValue","onInputChange","onInputKeyPress","onButtonClick","Grid","container","xs","md","item","paddingRight","TextField","placeholder","onChange","onKeyPress","fullWidth","Button","variant","onClick","TaskListItem","divider","onCheckBoxToggle","ListItem","Checkbox","disableRipple","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","DeleteOutlined","TaskList","items","onItemCheck","onItemRemove","Fragment","List","overflow","map","idx","assign","TaskApp","_useInputValue","initialValue","arguments","_useState","useState","_useState2","_slicedToArray","setInputValue","changeInput","event","target","clearInput","keyInput","callback","which","keyCode","useInputValue","_useTasks","_useState3","_useState4","tasks","setTasks","useEffect","getList","_asyncToGenerator","_callee","_context","data","apply","addTask","_addTask","_callee2","_context2","_x","checkTask","_checkTask","_callee3","_context3","_x2","removeTask","_removeTask","_callee4","_context4","_x3","useTasks","editTask","clearInputAndAddTask","ReactDOM","render","document","getElementById"],"mappings":"mNAAMA,EAAUC,wBAEHC,EACJ,WACL,OAAOC,MAAK,GAAAC,OAAIJ,EAAO,UAASK,KAAK,SAACC,GAAG,OAAKA,EAAIC,UAFzCL,EAIL,SAACM,GACL,IAAMC,EAAa,IAAIC,gBAEvB,OADAD,EAAWE,OAAO,OAAQH,GACnBL,MAAK,GAAAC,OAAIJ,EAAO,SAAS,CAC9BY,OAAQ,OACRC,KAAMJ,IACLJ,KAAK,SAACC,GAAG,OAAKA,EAAIC,UAVZL,EAYL,SAACY,GACL,IAAML,EAAa,IAAIC,gBAEvB,OADAD,EAAWE,OAAO,UAAWG,EAAKC,SAC3BZ,MAAK,GAAAC,OAAIJ,EAAO,UAAAI,OAASU,EAAKE,IAAM,CACzCJ,OAAQ,MACRC,KAAMJ,IACLJ,KAAK,SAACC,GAAG,OAAKA,EAAIC,UAlBZL,EAoBL,SAACc,GACL,OAAOb,MAAK,GAAAC,OAAIJ,EAAO,UAAAI,OAASY,GAAM,CACpCJ,OAAQ,WACPP,KAAK,SAACC,GAAG,OAAKA,EAAIC,uBCxBzBU,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAA1D,GAAAyB,EAAAhB,EAAAT,EAAA,SAAA4C,GAAA,OAAAO,KAAAQ,QAAA3D,EAAA4C,OAAA,SAAAgB,EAAAvB,EAAAwB,GAAA,IAAAC,EAAAlD,EAAAuC,KAAA,WAAAnC,MAAA,SAAAhB,EAAA4C,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAlE,EAAA4C,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAL,EAAArC,GAAAqC,EAAAO,GAAA,aAAAuB,EAAAtB,KAAA,KAAAuB,EAAAD,EAAAvB,IAAA5B,EAAAoD,EAAApD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA6C,EAAAG,QAAAhD,EAAAqD,SAAA5E,KAAA,SAAAuB,GAAAkD,EAAA,OAAAlD,EAAAgD,EAAAC,IAAA,SAAApC,GAAAqC,EAAA,QAAArC,EAAAmC,EAAAC,KAAAJ,EAAAG,QAAAhD,GAAAvB,KAAA,SAAA6E,GAAAF,EAAApD,MAAAsD,EAAAN,EAAAI,IAAA,SAAAG,GAAA,OAAAL,EAAA,QAAAK,EAAAP,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAlE,EAAA4C,EAAAoB,EAAAC,KAAA,OAAAH,MAAArE,KAAAsE,YAAA,SAAAtB,EAAAV,EAAAE,EAAAM,GAAA,IAAAiC,EAAA,iCAAAxE,EAAA4C,GAAA,iBAAA4B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAxE,EAAA,MAAA4C,EAAA,OAAA8B,IAAA,IAAAnC,EAAAvC,SAAAuC,EAAAK,QAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,GAAA,YAAArC,EAAAvC,OAAAuC,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAvC,OAAA,uBAAAwE,EAAA,MAAAA,EAAA,YAAAjC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,SAAA,WAAAL,EAAAvC,QAAAuC,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA4B,EAAA,gBAAAL,EAAAzB,EAAAX,EAAAE,EAAAM,GAAA,cAAA4B,EAAAtB,KAAA,IAAA2B,EAAAjC,EAAA2C,KAAA,6BAAAf,EAAAvB,MAAAG,EAAA,gBAAA/B,MAAAmD,EAAAvB,IAAAsC,KAAA3C,EAAA2C,MAAA,UAAAf,EAAAtB,OAAA2B,EAAA,YAAAjC,EAAAvC,OAAA,QAAAuC,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAiC,EAAAF,EAAApC,GAAA,IAAA4C,EAAA5C,EAAAvC,SAAA2E,EAAAvD,SAAA+D,GAAA,QAAAC,IAAApF,EAAA,OAAAuC,EAAAoC,SAAA,eAAAQ,GAAAR,EAAAvD,SAAAiE,SAAA9C,EAAAvC,OAAA,SAAAuC,EAAAK,SAAAwC,EAAAP,EAAAF,EAAApC,GAAA,UAAAA,EAAAvC,SAAA,WAAAmF,IAAA5C,EAAAvC,OAAA,QAAAuC,EAAAK,IAAA,IAAA0C,UAAA,oCAAAH,EAAA,aAAApC,EAAA,IAAAoB,EAAAzB,EAAA1C,EAAA2E,EAAAvD,SAAAmB,EAAAK,KAAA,aAAAuB,EAAAtB,KAAA,OAAAN,EAAAvC,OAAA,QAAAuC,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAoC,SAAA,KAAA5B,EAAA,IAAAwC,EAAApB,EAAAvB,IAAA,OAAA2C,IAAAL,MAAA3C,EAAAoC,EAAAa,YAAAD,EAAAvE,MAAAuB,EAAAkD,KAAAd,EAAAe,QAAA,WAAAnD,EAAAvC,SAAAuC,EAAAvC,OAAA,OAAAuC,EAAAK,SAAAwC,GAAA7C,EAAAoC,SAAA,KAAA5B,GAAAwC,GAAAhD,EAAAvC,OAAA,QAAAuC,EAAAK,IAAA,IAAA0C,UAAA,oCAAA/C,EAAAoC,SAAA,KAAA5B,GAAA,SAAA4C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAzC,KAAA+C,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA1B,EAAA0B,EAAAQ,YAAA,GAAAlC,EAAAtB,KAAA,gBAAAsB,EAAAvB,IAAAiD,EAAAQ,WAAAlC,EAAA,SAAA3B,EAAAN,GAAAiB,KAAA+C,WAAA,EAAAJ,OAAA,SAAA5D,EAAAwB,QAAAiC,EAAAxC,WAAAmD,OAAA,YAAA/C,EAAAgD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAA1D,KAAAyD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAhG,EAAAoC,KAAAyD,EAAAI,GAAA,OAAAlB,EAAAzE,MAAAuF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAzE,WAAAoE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA1D,WAAAoE,EAAAF,MAAA,UAAAlC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA4D,YAAAnF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAuG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA/D,GAAA,uBAAA+D,EAAAH,aAAAG,EAAAnH,QAAAU,EAAA2G,KAAA,SAAAH,GAAA,OAAAtG,OAAA0G,eAAA1G,OAAA0G,eAAAJ,EAAA7D,IAAA6D,EAAAK,UAAAlE,EAAAxB,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAArG,UAAAD,OAAA8B,OAAAkB,GAAAsD,GAAAxG,EAAA8G,MAAA,SAAAxE,GAAA,OAAAyB,QAAAzB,IAAAa,EAAAG,EAAAnD,WAAAgB,EAAAmC,EAAAnD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAsD,gBAAAtD,EAAA+G,MAAA,SAAAtF,EAAAC,EAAAC,EAAAC,EAAA2B,QAAA,IAAAA,MAAAyD,SAAA,IAAAC,EAAA,IAAA3D,EAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA2B,GAAA,OAAAvD,EAAAuG,oBAAA7E,GAAAuF,IAAA9B,OAAAhG,KAAA,SAAA2E,GAAA,OAAAA,EAAAc,KAAAd,EAAApD,MAAAuG,EAAA9B,UAAAhC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAkH,KAAA,SAAAC,GAAA,IAAAC,EAAAlH,OAAAiH,GAAAD,EAAA,WAAA1G,KAAA4G,EAAAF,EAAArB,KAAArF,GAAA,OAAA0G,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAd,QAAA,KAAA5F,EAAA0G,EAAAI,MAAA,GAAA9G,KAAA4G,EAAA,OAAAjC,EAAAzE,MAAAF,EAAA2E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAAnF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAuG,YAAAxE,EAAA8D,MAAA,SAAAuB,GAAA,GAAA1E,KAAA2E,KAAA,EAAA3E,KAAAsC,KAAA,EAAAtC,KAAA2B,KAAA3B,KAAA4B,WAAAK,EAAAjC,KAAA+B,MAAA,EAAA/B,KAAAwB,SAAA,KAAAxB,KAAAnD,OAAA,OAAAmD,KAAAP,SAAAwC,EAAAjC,KAAA+C,WAAAxC,QAAA0C,IAAAyB,EAAA,QAAAjI,KAAAuD,KAAA,MAAAvD,EAAAmI,OAAA,IAAArH,EAAAoC,KAAAK,KAAAvD,KAAA6G,OAAA7G,EAAAoI,MAAA,MAAA7E,KAAAvD,QAAAwF,IAAA6C,KAAA,WAAA9E,KAAA+B,MAAA,MAAAgD,EAAA/E,KAAA+C,WAAA,GAAAG,WAAA,aAAA6B,EAAArF,KAAA,MAAAqF,EAAAtF,IAAA,OAAAO,KAAAgF,MAAAnD,kBAAA,SAAAoD,GAAA,GAAAjF,KAAA+B,KAAA,MAAAkD,EAAA,IAAA7F,EAAAY,KAAA,SAAAkF,EAAAC,EAAAC,GAAA,OAAApE,EAAAtB,KAAA,QAAAsB,EAAAvB,IAAAwF,EAAA7F,EAAAkD,KAAA6C,EAAAC,IAAAhG,EAAAvC,OAAA,OAAAuC,EAAAK,SAAAwC,KAAAmD,EAAA,QAAA5B,EAAAxD,KAAA+C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA1C,KAAA+C,WAAAS,GAAAxC,EAAA0B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA3C,KAAA2E,KAAA,KAAAU,EAAA9H,EAAAoC,KAAA+C,EAAA,YAAA4C,EAAA/H,EAAAoC,KAAA+C,EAAA,iBAAA2C,GAAAC,EAAA,IAAAtF,KAAA2E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA5C,KAAA2E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAArF,KAAA2E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAAhE,MAAA,6CAAAtB,KAAA2E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAf,OAAA,SAAApC,EAAAD,GAAA,QAAA+D,EAAAxD,KAAA+C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA1C,KAAA+C,WAAAS,GAAA,GAAAd,EAAAC,QAAA3C,KAAA2E,MAAApH,EAAAoC,KAAA+C,EAAA,eAAA1C,KAAA2E,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAA7F,GAAA,aAAAA,IAAA6F,EAAA5C,QAAAlD,MAAA8F,EAAA1C,aAAA0C,EAAA,UAAAvE,EAAAuE,IAAArC,WAAA,UAAAlC,EAAAtB,OAAAsB,EAAAvB,MAAA8F,GAAAvF,KAAAnD,OAAA,OAAAmD,KAAAsC,KAAAiD,EAAA1C,WAAAjD,GAAAI,KAAAwF,SAAAxE,IAAAwE,SAAA,SAAAxE,EAAA8B,GAAA,aAAA9B,EAAAtB,KAAA,MAAAsB,EAAAvB,IAAA,gBAAAuB,EAAAtB,MAAA,aAAAsB,EAAAtB,KAAAM,KAAAsC,KAAAtB,EAAAvB,IAAA,WAAAuB,EAAAtB,MAAAM,KAAAgF,KAAAhF,KAAAP,IAAAuB,EAAAvB,IAAAO,KAAAnD,OAAA,SAAAmD,KAAAsC,KAAA,kBAAAtB,EAAAtB,MAAAoD,IAAA9C,KAAAsC,KAAAQ,GAAAlD,GAAA6F,OAAA,SAAA5C,GAAA,QAAAW,EAAAxD,KAAA+C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA1C,KAAA+C,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA7C,KAAAwF,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA9C,IAAA8F,MAAA,SAAA/C,GAAA,QAAAa,EAAAxD,KAAA+C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA1C,KAAA+C,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA3B,EAAA0B,EAAAQ,WAAA,aAAAlC,EAAAtB,KAAA,KAAAiG,EAAA3E,EAAAvB,IAAAwD,EAAAP,GAAA,OAAAiD,GAAA,UAAArE,MAAA,0BAAAsE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAvC,KAAAwB,SAAA,CAAAvD,SAAAmC,EAAAgD,GAAAf,aAAAE,WAAA,SAAAvC,KAAAnD,SAAAmD,KAAAP,SAAAwC,GAAArC,IAAAzC,EAEO,oCCcQ0I,EAdAC,IAAMC,KAAK,SAAAC,GAAA,IAAGC,EAAQD,EAARC,SAAQ,OACnCH,IAAAI,cAACC,IAAK,CACJC,UAAW,EACXC,MAAO,CAAEC,QAAS,EAAGC,OAAQ,EAAGC,gBAAiB,YAEjDV,IAAAI,cAACO,IAAM,CAACC,MAAM,UAAUC,SAAS,SAASN,MAAO,CAAEO,OAAQ,KACzDd,IAAAI,cAACW,IAAO,CAACR,MAAO,CAAEO,OAAQ,KACxBd,IAAAI,cAACY,IAAU,CAACJ,MAAM,WAAU,cAG/BT,8BCkBUc,EA5BCjB,IAAMC,KACpB,SAAAC,GAAA,IAAGgB,EAAUhB,EAAVgB,WAAYC,EAAajB,EAAbiB,cAAeC,EAAelB,EAAfkB,gBAAiBC,EAAanB,EAAbmB,cAAa,OAC1DrB,IAAAI,cAACC,IAAK,CAACE,MAAO,CAAEE,OAAQ,GAAID,QAAS,KACnCR,IAAAI,cAACkB,IAAI,CAACC,WAAS,GACbvB,IAAAI,cAACkB,IAAI,CAACE,GAAI,GAAIC,GAAI,GAAIC,MAAI,EAACnB,MAAO,CAAEoB,aAAc,KAChD3B,IAAAI,cAACwB,IAAS,CACRC,YAAY,gBACZ9J,MAAOmJ,EACPY,SAAUX,EACVY,WAAYX,EACZY,WAAS,KAGbhC,IAAAI,cAACkB,IAAI,CAACE,GAAI,EAAGC,GAAI,EAAGC,MAAI,GACtB1B,IAAAI,cAAC6B,IAAM,CACLD,WAAS,EACTpB,MAAM,YACNsB,QAAQ,WACRC,QAASd,GACV,kFCEIe,EAdMpC,IAAMC,KACzB,SAAAC,GAAA,IAAGvJ,EAAIuJ,EAAJvJ,KAAM0L,EAAOnC,EAAPmC,QAASnL,EAAOgJ,EAAPhJ,QAASoL,EAAgBpC,EAAhBoC,iBAAkBjB,EAAanB,EAAbmB,cAAa,OACxDrB,IAAAI,cAACmC,IAAQ,CAACF,QAASA,GACjBrC,IAAAI,cAACoC,IAAQ,CAACL,QAASG,EAAkBpL,QAASA,EAASuL,eAAa,IACpEzC,IAAAI,cAACsC,IAAY,CAACC,QAAShM,IACvBqJ,IAAAI,cAACwC,IAAuB,KACtB5C,IAAAI,cAACyC,IAAU,CAACC,aAAW,cAAcX,QAASd,GAC5CrB,IAAAI,cAAC2C,IAAc,WCQVC,EApBEhD,IAAMC,KAAK,SAAAC,GAAA,IAAG+C,EAAK/C,EAAL+C,MAAOC,EAAWhD,EAAXgD,YAAaC,EAAYjD,EAAZiD,aAAY,OAC7DnD,IAAAI,cAAAJ,IAAAoD,SAAA,KACGH,EAAMxF,OAAS,GACduC,IAAAI,cAACC,IAAK,CAACE,MAAO,CAAEE,OAAQ,KACtBT,IAAAI,cAACiD,IAAI,CAAC9C,MAAO,CAAE+C,SAAU,WACtBL,EAAMM,IAAI,SAACtM,EAAMuM,GAAG,OACnBxD,IAAAI,cAACgC,EAAY7K,OAAAkM,OAAA,GACPxM,EAAI,CACRY,IAAG,YAAAtB,OAAcU,EAAKE,IACtBkL,QAASmB,IAAQP,EAAMxF,OAAS,EAChC4D,cAAe,kBAAM8B,EAAalM,EAAKE,KACvCmL,iBAAkB,kBAAMY,EAAYjM,cCJ5CyM,EAAU1D,IAAMC,KAAK,WAAM,IAAA0D,ELTJ,WAAuB,IAAtBC,EAAYC,UAAApG,OAAA,QAAAtB,IAAA0H,UAAA,GAAAA,UAAA,GAAG,GAAEC,EACTC,mBAASH,GAAaI,EAAAC,YAAAH,EAAA,GAAnD5C,EAAU8C,EAAA,GAAEE,EAAaF,EAAA,GAEhC,MAAO,CACL9C,aACAiD,YAAa,SAACC,GAAK,OAAKF,EAAcE,EAAMC,OAAOtM,QACnDuM,WAAY,kBAAMJ,EAAc,KAChCK,SAAU,SAACH,EAAOI,GAChB,OAAoB,KAAhBJ,EAAMK,OAAkC,KAAlBL,EAAMM,WAC9BF,EAAStD,IACF,KKA6CyD,GAAlDzD,EAAUyC,EAAVzC,WAAYiD,EAAWR,EAAXQ,YAAaG,EAAUX,EAAVW,WAAYC,EAAQZ,EAARY,SAAQK,ELQ/B,WAAuB,IAAtBhB,EAAYC,UAAApG,OAAA,QAAAtB,IAAA0H,UAAA,GAAAA,UAAA,GAAG,GAAEgB,EACdd,mBAASH,GAAakB,EAAAb,YAAAY,EAAA,GAAzCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,oBAAU,WACRC,KACC,IAEH,IAAMA,EAAO,eAAAhF,EAAAiF,YAAA/N,IAAA4G,KAAG,SAAAoH,IAAA,IAAAjK,EAAA,OAAA/D,IAAAyB,KAAA,SAAAwM,GAAA,cAAAA,EAAAxG,KAAAwG,EAAA7I,MAAA,cAAA6I,EAAA7I,KAAA,EACOnG,IAAiB,OAAhC8E,EAAMkK,EAAAxJ,KACZmJ,EAAS7J,EAAOmK,MAAM,wBAAAD,EAAArG,SAAAoG,MACvB,kBAHY,OAAAlF,EAAAqF,MAAArL,KAAA2J,YAAA,GAKb,MAAO,CACLkB,QACAS,QAAO,eAAAC,EAAAN,YAAA/N,IAAA4G,KAAE,SAAA0H,EAAO/O,GAAI,OAAAS,IAAAyB,KAAA,SAAA8M,GAAA,cAAAA,EAAA9G,KAAA8G,EAAAnJ,MAAA,UACL,KAAT7F,EAAW,CAAAgP,EAAAnJ,KAAA,eAAAmJ,EAAA3J,OAAA,wBAAA2J,EAAAnJ,KAAA,EAGTnG,EAAeM,GAAK,OAE1BuO,IAAU,wBAAAS,EAAA3G,SAAA0G,MACX,gBAAAE,GAAA,OAAAH,EAAAF,MAAArL,KAAA2J,YAPM,GAQPgC,UAAS,eAAAC,EAAAX,YAAA/N,IAAA4G,KAAE,SAAA+H,EAAO9O,GAAI,OAAAG,IAAAyB,KAAA,SAAAmN,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAxJ,MAAA,cAAAwJ,EAAAxJ,KAAA,EACdnG,EAAeY,GAAK,OAE1BiO,IAAU,wBAAAc,EAAAhH,SAAA+G,MACX,gBAAAE,GAAA,OAAAH,EAAAP,MAAArL,KAAA2J,YAJQ,GAKTqC,WAAU,eAAAC,EAAAhB,YAAA/N,IAAA4G,KAAE,SAAAoI,EAAOjP,GAAE,OAAAC,IAAAyB,KAAA,SAAAwN,GAAA,cAAAA,EAAAxH,KAAAwH,EAAA7J,MAAA,cAAA6J,EAAA7J,KAAA,EACbnG,EAAec,GAAG,OACxB+N,IAAU,wBAAAmB,EAAArH,SAAAoH,MACX,gBAAAE,GAAA,OAAAH,EAAAZ,MAAArL,KAAA2J,YAHS,IKjCgD0C,GAApDxB,EAAKH,EAALG,MAAOS,EAAOZ,EAAPY,QAASK,EAASjB,EAATiB,UAAqBK,GAAFtB,EAAR4B,SAAoB5B,EAAVsB,YAEvCO,EAAuB,WAC3BnC,IACAkB,EAAQtE,IAGV,OACElB,IAAAI,cAACL,EAAM,KACLC,IAAAI,cAACa,EAAO,CACNC,WAAYA,EACZC,cAAegD,EACf9C,cAAeoF,EACfrF,gBAAiB,SAACgD,GAAK,OAAKG,EAASH,EAAOqC,MAE9CzG,IAAAI,cAAC4C,EAAQ,CACPC,MAAO8B,EACP7B,YAAa2C,EACb1C,aAAc+C,OAMtBQ,IAASC,OAAO3G,IAAAI,cAACsD,EAAO,MAAKkD,SAASC,eAAe","file":"static/js/main.7e197a94.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_URL || \"/\";\n\nexport const taskAPI = {\n  getList() {\n    return fetch(`${baseUrl}/task`).then((res) => res.json());\n  },\n  create(name) {\n    const urlencoded = new URLSearchParams();\n    urlencoded.append(\"name\", name);\n    return fetch(`${baseUrl}/task`, {\n      method: \"POST\",\n      body: urlencoded,\n    }).then((res) => res.json());\n  },\n  update(task) {\n    const urlencoded = new URLSearchParams();\n    urlencoded.append(\"checked\", task.checked);\n    return fetch(`${baseUrl}/task/${task.id}`, {\n      method: \"PUT\",\n      body: urlencoded,\n    }).then((res) => res.json());\n  },\n  delete(id) {\n    return fetch(`${baseUrl}/task/${id}`, {\n      method: \"DELETE\",\n    }).then((res) => res.json());\n  }\n}","import { useState, useEffect } from \"react\";\nimport { taskAPI } from \"./api\";\n\nexport const useInputValue = (initialValue = \"\") => {\n  const [inputValue, setInputValue] = useState(initialValue);\n\n  return {\n    inputValue,\n    changeInput: (event) => setInputValue(event.target.value),\n    clearInput: () => setInputValue(\"\"),\n    keyInput: (event, callback) => {\n      if (event.which === 13 || event.keyCode === 13) {\n        callback(inputValue);\n        return true;\n      }\n\n      return false;\n    },\n  };\n};\n\nexport const useTasks = (initialValue = []) => {\n  const [tasks, setTasks] = useState(initialValue);\n  useEffect(() => {\n    getList();\n  }, []);\n\n  const getList = async () => {\n    const result = await taskAPI.getList();\n    setTasks(result.data);\n  };\n\n  return {\n    tasks,\n    addTask: async (name) => {\n      if (name === \"\") {\n        return;\n      }\n      await taskAPI.create(name);\n      \n      getList();\n    },\n    checkTask: async (task) => {\n      await taskAPI.update(task);\n\n      getList();\n    },\n    removeTask: async (id) => {\n      await taskAPI.delete(id);\n      getList();\n    },\n  };\n};\n","import React from \"react\";\nimport { AppBar, Toolbar, Typography, Paper } from \"@material-ui/core\";\n\nconst Layout = React.memo(({ children }) => (\n  <Paper\n    elevation={0}\n    style={{ padding: 0, margin: 0, backgroundColor: \"#fafafa\" }}\n  >\n    <AppBar color=\"primary\" position=\"static\" style={{ height: 64 }}>\n      <Toolbar style={{ height: 64 }}>\n        <Typography color=\"inherit\">Task APP</Typography>\n      </Toolbar>\n    </AppBar>\n    {children}\n  </Paper>\n));\n\nexport default Layout;\n","import React from \"react\";\nimport { TextField, Paper, Button, Grid } from \"@material-ui/core\";\n\nconst AddTask = React.memo(\n  ({ inputValue, onInputChange, onInputKeyPress, onButtonClick }) => (\n    <Paper style={{ margin: 16, padding: 16 }}>\n      <Grid container>\n        <Grid xs={10} md={11} item style={{ paddingRight: 16 }}>\n          <TextField\n            placeholder=\"Add Task here\"\n            value={inputValue}\n            onChange={onInputChange}\n            onKeyPress={onInputKeyPress}\n            fullWidth\n          />\n        </Grid>\n        <Grid xs={2} md={1} item>\n          <Button\n            fullWidth\n            color=\"secondary\"\n            variant=\"outlined\"\n            onClick={onButtonClick}\n          >\n            Add\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n);\n\nexport default AddTask;\n","import React from \"react\";\nimport {\n  ListItem,\n  Checkbox,\n  IconButton,\n  ListItemText,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutline\";\n\nconst TaskListItem = React.memo(\n  ({ name, divider, checked, onCheckBoxToggle, onButtonClick }) => (\n    <ListItem divider={divider}>\n      <Checkbox onClick={onCheckBoxToggle} checked={checked} disableRipple />\n      <ListItemText primary={name} />\n      <ListItemSecondaryAction>\n        <IconButton aria-label=\"Delete Task\" onClick={onButtonClick}>\n          <DeleteOutlined />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n);\n\nexport default TaskListItem;\n","import React from \"react\";\nimport { List, Paper } from \"@material-ui/core\";\n\nimport TaskListItem from \"./TaskListItem\";\n\nconst TaskList = React.memo(({ items, onItemCheck, onItemRemove }) => (\n  <>\n    {items.length > 0 && (\n      <Paper style={{ margin: 16 }}>\n        <List style={{ overflow: \"scroll\" }}>\n          {items.map((task, idx) => (\n            <TaskListItem\n              {...task}\n              key={`TaskItem.${task.id}`}\n              divider={idx !== items.length - 1}\n              onButtonClick={() => onItemRemove(task.id)}\n              onCheckBoxToggle={() => onItemCheck(task)}\n            />\n          ))}\n        </List>\n      </Paper>\n    )}\n  </>\n));\n\nexport default TaskList;\n","import \"./styles.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { useInputValue, useTasks } from \"./custom-hooks\";\n\nimport Layout from \"./components/Layout\";\n\nimport AddTask from \"./components/AddTask\";\nimport TaskList from \"./components/TaskList\";\n\nconst TaskApp = React.memo(() => {\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n  const { tasks, addTask, checkTask, editTask, removeTask } = useTasks();\n\n  const clearInputAndAddTask = () => {\n    clearInput();\n    addTask(inputValue);\n  };\n\n  return (\n    <Layout>\n      <AddTask\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={clearInputAndAddTask}\n        onInputKeyPress={(event) => keyInput(event, clearInputAndAddTask)}\n      />\n      <TaskList\n        items={tasks}\n        onItemCheck={checkTask}\n        onItemRemove={removeTask}\n      />\n    </Layout>\n  );\n});\n\nReactDOM.render(<TaskApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}